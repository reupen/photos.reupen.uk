---
import { getImage, LocalImageProps, Image } from "astro:assets"
import { CollectionEntry, getCollection } from "astro:content"

import Layout from "../../layouts/Layout.astro"
import { format } from "date-fns"
import Picture from "../../components/Picture.astro"

export async function getStaticPaths() {
  const images = await getCollection("images")
  return images.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }))
}

const { entry }: { entry: CollectionEntry<"images"> } = Astro.props
const { Content } = await entry.render()
---

<style>
  .wrapper {
    display: block;
    margin: 0 auto;
    width: fit-content;
  }

  .standalone-picture,
  .standalone-picture :global(img) {
    height: fit-content;
    max-height: 85vh;
    max-width: 100%;
    object-fit: scale-down;
    margin-bottom: 1rem;
  }

  dl {
    display: flex;
    flex-wrap: wrap;
    column-gap: 1.1rem;
    margin: 0.5rem auto 0;
  }

  dt {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
  }

  dt,
  dd {
    display: inline;
  }

  dd {
    margin-left: 0;
  }

  p {
    font-size: 20px;
    margin: 0.85rem 0;
  }
</style>

<Layout title={entry.data.title} fullWidth>
  <div class="wrapper">
    <a href={entry.data.src.src}>
      <Picture class="standalone-picture" src={entry.data.src} alt={"TODO"} />
    </a>
    <p>
      {format(entry.data.exif.date, "d MMMM yyyy")} • {entry.data.title}
    </p>
    <dl>
      <dt>Camera</dt>
      <dd>{entry.data.exif.cameraModel}</dd>
      <dt>Lens</dt>
      <dd>{entry.data.exif.lensModel}</dd>
      <dt>Focal length</dt>
      <dd>{entry.data.exif.focalLength.replace(" ", "")}</dd>
      <dt>F number</dt>
      <dd>ƒ/{entry.data.exif.fNumber}</dd>
      <dt>Exposure time</dt>
      <dd>{entry.data.exif.exposureTime}s</dd>
      <dt>ISO</dt>
      <dd><span aria-hidden="true">ISO</span>{" "}{entry.data.exif.iso}</dd>
    </dl>
    <Content />
  </div>
</Layout>
