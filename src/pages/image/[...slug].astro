---
import { CollectionEntry, getCollection } from "astro:content"
import { format } from "date-fns"

import Layout from "../../layouts/Layout.astro"
import Picture from "../../components/Picture.astro"
import { getImages } from "../../utils/getImages"
import Pagination from "../../components/Pagination.astro"

export async function getStaticPaths() {
  return (await getImages()).map((entry, index) => ({
    params: { slug: entry.slug },
    props: { entry, index },
  }))
}

const images = await getImages()

const { entry, index }: { entry: CollectionEntry<"images"> } = Astro.props
const { Content } = await entry.render()

const homePageNumber = Math.floor(index / 10) + 1
const homePagePath = homePageNumber == 1 ? "/" : `/${homePageNumber}`
---

<style>
  @custom-media --tablet (min-width: 750px);

  :global(body) {
    margin-bottom: 50px;

    @media (--tablet) {
      margin-bottom: 0;
    }
  }

  dl {
    display: flex;
    flex-wrap: wrap;
    column-gap: 1.1rem;
    margin: 0 auto 0;
  }

  dt,
  dd {
    display: inline;
    margin: 0.2rem 0;

    @media (--tablet) {
      margin: 0;
    }
  }

  dd {
    margin-left: 0;
  }

  .mobile-full-break {
    width: 100%;

    @media (--tablet) {
      width: auto;
    }
  }

  .wrapper {
    display: block;
    margin: 0 auto;
    width: auto;
  }

  .standalone-picture.picture {
    &,
    :global(img) {
      position: relative;
      height: fit-content;
      max-height: calc(100vh - 12rem);
      object-fit: scale-down;
      margin: 0 auto 1rem;
    }
  }

  .standalone-fullscreen-picture.picture {
    &,
    :global(img) {
      height: 0;
      width: 0;
    }
  }

  .standalone-fullscreen-picture:fullscreen {
    &,
    :global(img) {
      object-fit: scale-down;
      height: 100vh;
      width: 100vw;
    }
  }

  .title {
    flex: 1;
    font-size: 20px;
    margin: 0 0 0.85rem;
  }

  .pagination-image-page {
    position: fixed;
    left: 0;
    padding: 0 1rem 1rem;
    bottom: 0;
    width: 100%;
    font-size: 20px;
    height: 50px;
    background: rgba(0, 0, 0, 0.15);
    backdrop-filter: blur(8px);

    @media (--tablet) {
      position: static;
      display: flex;
      padding: 0;
      column-gap: 1rem;
      background: none;
      height: auto;
    }
  }

  .details {
    display: flex;
    max-width: 1377px;
    margin: 0 auto;
  }

  .details-top-row {
    display: flex;
  }

  .details-left {
    flex: 1;
  }

  .secondary-links {
    display: flex;
    flex-flow: column;
    margin-top: 0.85rem;
    row-gap: 0.5rem;

    @media (--tablet) {
      flex-flow: row;
      column-gap: 0.85rem;
    }
  }

  #fullscreen-link {
    cursor: pointer;

    &[hidden="hidden"] {
      display: none;
    }
  }
</style>

<Layout title={entry.data.title} fullWidth>
  <h1 class="visually-hidden">Image: {entry.data.title}</h1>
  <div class="wrapper">
    <Picture
      id="fullscreen-picture"
      class="standalone-fullscreen-picture"
      src={entry.data.src}
      alt={entry.data.title}
    />
    <Picture
      class="standalone-picture"
      src={entry.data.src}
      alt={entry.data.title}
    />
  </div>
  <div class="details">
    <div class="details-left">
      <div class="details-top-row">
        <div class="title">
          {format(entry.data.exif.date, "d MMMM yyyy")} • {entry.data.title}
        </div>
        <div class="details-nav">
          <Pagination
            class="pagination-image-page"
            entryName="image"
            previousHref={index > 0
              ? `/image/${images[index - 1].slug}`
              : undefined}
            nextHref={index + 1 < images.length
              ? `/image/${images[index + 1].slug}`
              : undefined}
          />
        </div>
      </div>
      <dl>
        <dt class="visually-hidden">Camera</dt>
        <dd class="mobile-full-break" title="Camera">
          {entry.data.exif.cameraModel}
        </dd>
        <dt class="visually-hidden">Lens</dt>
        <dd class="mobile-full-break" title="Lens">
          {entry.data.exif.lensModel}
        </dd>
        <dt class="visually-hidden">Focal length</dt>
        <dd title="Focal length">
          {entry.data.exif.focalLength.replace(" ", "")}
        </dd>
        <dt class="visually-hidden">f-number</dt>
        <dd title="f-number">ƒ/{entry.data.exif.fNumber}</dd>
        <dt class="visually-hidden">Exposure time</dt>
        <dd title="Exposure time">{entry.data.exif.exposureTime}s</dd>
        <dt class="visually-hidden">ISO</dt>
        <dd><span aria-hidden="true">ISO</span>{" "}{entry.data.exif.iso}</dd>
      </dl>
      <Content />
      <div class="secondary-links">
        <a id="fullscreen-link" class="control" hidden="hidden">
          <span>View fullscreen</span>
        </a>
        <a href={`${homePagePath}#${entry.slug}`}>Return to photo list</a>
      </div>
    </div>
  </div>
</Layout>

<script>
  const fullScreenButton = document.getElementById("fullscreen-link")
  fullScreenButton.removeAttribute("hidden")
  fullScreenButton.addEventListener("click", () => {
    document.getElementById("fullscreen-picture").requestFullscreen()
  })

  document.addEventListener("keydown", (event) => {
    if (event.ctrlKey || event.shiftKey || event.altKey) {
      return
    }

    switch (event.key) {
      default:
        return
      case "ArrowLeft":
        document.getElementById("previous-link").click()
        break
      case "ArrowRight":
        document.getElementById("next-link").click()
        break
    }

    event.preventDefault()
  })
</script>
