---
import { CollectionEntry, getCollection } from "astro:content"
import { format } from "date-fns"

import Layout from "../../layouts/Layout.astro"
import Picture from "../../components/Picture.astro"
import { getImages } from "../../utils/getImages"

export async function getStaticPaths() {
  const images = await getImages()
  return (await getImages()).map((entry, index) => ({
    params: { slug: entry.slug },
    props: { entry, index },
  }))
}

const images = await getImages()
const { entry, index }: { entry: CollectionEntry<"images"> } = Astro.props
const { Content } = await entry.render()

const homePageNumber = Math.floor(index / 10) + 1
const homePagePath = homePageNumber == 1 ? "/" : `/${homePageNumber}`
---

<style>
  .wrapper {
    display: block;
    margin: 0 auto;
    width: fit-content;
  }

  .standalone-picture.picture,
  .standalone-picture.picture :global(img) {
    height: fit-content;
    max-height: 43vw;
    max-width: 100%;
    object-fit: scale-down;
    margin-bottom: 1rem;
  }

  .standalone-fullscreen-picture.picture {
    &,
    :global(img) {
      height: 0;
      width: 0;
    }
  }

  .standalone-fullscreen-picture:fullscreen,
  .standalone-fullscreen-picture:fullscreen :global(img) {
    height: fit-content;
    width: auto;
    object-fit: scale-down;
    max-height: 100vh;
    max-width: 100vw;
    margin: 0 auto;
  }

  .details {
    display: flex;
    max-width: 1415px;
    margin: 0 auto;
  }

  .details-left {
    flex: 1;
  }

  .secondary-links {
    display: flex;
    margin-top: 0.85rem;
    column-gap: 0.85rem;
  }

  #fullscreen-link {
    cursor: pointer;

    &[hidden="hidden"] {
      display: none;
    }
  }

  .nav {
    display: flex;
    column-gap: 1rem;
    font-size: 20px;

    & a {
      display: flex;
      align-items: center;

      & span {
        display: flex;
        align-items: center;
      }

      &:hover {
        text-decoration: none;

        .nav-link-text {
          text-decoration: underline;
          text-underline-offset: 4px;
        }
      }
    }
  }

  dl {
    display: flex;
    flex-wrap: wrap;
    column-gap: 1.1rem;
    margin: 0.5rem auto 0;
  }

  dt,
  dd {
    display: inline;
  }

  dd {
    margin-left: 0;
  }

  .title {
    font-size: 20px;
    margin: 0 0 0.85rem;
  }
</style>

<Layout title={entry.data.title} fullWidth>
  <div class="wrapper">
    <Picture
      id="fullscreen-picture"
      class="standalone-fullscreen-picture"
      src={entry.data.src}
      alt={entry.data.title}
    />
    <a href={entry.data.src.src} id="picture-link">
      <Picture
        class="standalone-picture"
        src={entry.data.src}
        alt={entry.data.title}
      />
    </a>
    <div class="details">
      <div class="details-left">
        <div class="title">
          {format(entry.data.exif.date, "d MMMM yyyy")} • {entry.data.title}
        </div>
        <dl>
          <dt class="visually-hidden">Camera</dt>
          <dd title="Camera">{entry.data.exif.cameraModel}</dd>
          <dt class="visually-hidden">Lens</dt>
          <dd title="Lens">{entry.data.exif.lensModel}</dd>
          <dt class="visually-hidden">Focal length</dt>
          <dd title="Focal length">
            {entry.data.exif.focalLength.replace(" ", "")}
          </dd>
          <dt class="visually-hidden">f-number</dt>
          <dd title="f-number">ƒ/{entry.data.exif.fNumber}</dd>
          <dt class="visually-hidden">Exposure time</dt>
          <dd title="Exposure time">{entry.data.exif.exposureTime}s</dd>
          <dt class="visually-hidden">ISO</dt>
          <dd><span aria-hidden="true">ISO</span>{" "}{entry.data.exif.iso}</dd>
        </dl>
        <Content />
        <div class="secondary-links">
          <a id="fullscreen-link" class="control" hidden="hidden">
            <span>View fullscreen</span>
          </a>
          <a id="return-link" href={`${homePagePath}#${entry.slug}`}
            >Return to photo list</a
          >
        </div>
      </div>
      <div class="details-nav">
        <div class="nav">
          {
            index > 0 && (
              <a href={`/image/${images[index - 1].slug}`} id="previous-link">
                <span>
                  <i class="fa-solid fa-chevron-left" />
                  &nbsp;<span class="nav-link-text">Previous</span>
                </span>
              </a>
            )
          }
          {
            index + 1 < images.length && (
              <a href={`/image/${images[index + 1].slug}`} id="next-link">
                <span>
                  <span class="nav-link-text">Next</span>&nbsp;
                  <i class="fa-solid fa-chevron-right" />
                </span>
              </a>
            )
          }
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  const fullScreenButton = document.getElementById("fullscreen-link")
  fullScreenButton?.removeAttribute("hidden")
  fullScreenButton?.addEventListener("click", () => {
    document.getElementById("fullscreen-picture").requestFullscreen()
  })

  document.addEventListener("keydown", (event) => {
    if (event.key === "ArrowLeft") {
      document.getElementById("previous-link").click()
    } else if (event.key === "ArrowRight") {
      document.getElementById("next-link").click()
    }
  })

  const returnLink = document.getElementById("return-link")

  returnLink?.addEventListener("click", (event) => {
    if (!window.history || !window._photosReupenUKVisitedHome) return

    window.history.back()
    event.preventDefault()
  })
</script>
