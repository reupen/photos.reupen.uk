---
import { render } from "astro:content"
import { experimental_AstroContainer } from "astro/container"
import { format } from "date-fns"
import { convert as htmlToText } from "html-to-text"

import Layout from "../../layouts/Layout.astro"
import Picture from "../../components/Picture.astro"
import { getImages } from "../../utils/getImages"
import Pagination from "../../components/Pagination.astro"

export async function getStaticPaths() {
  return (await getImages()).map((entry, index) => ({
    params: { slug: entry.id },
    props: { entry, index },
  }))
}

const images = await getImages()

const { entry, index } = Astro.props as Awaited<
  ReturnType<typeof getStaticPaths>
>[0]["props"]
const { Content } = await render(entry)

const container = await experimental_AstroContainer.create()
const htmlDescription = await container.renderToString(Content)
const textDescription = htmlToText(htmlDescription, { wordwrap: false })

const homePageNumber = Math.floor(index / 10) + 1
const homePagePath = homePageNumber == 1 ? "/" : `/${homePageNumber}/`
const previousPath = index > 0 ? `/image/${images[index - 1].id}/` : undefined
const nextPath =
  index + 1 < images.length ? `/image/${images[index + 1].id}/` : undefined
---

<style>
  @import "./_[...slug].pcss";
</style>

<Layout
  description={textDescription}
  title={entry.data.title}
  nextUrl={nextPath}
  previousUrl={previousPath}
  returnUrl={`${homePagePath}#${entry.id}`}
  fullWidth
  showTitle
  data-previous-path={previousPath}
  data-next-path={nextPath}
>
  <div class="container-wide short-grid content">
    <div class="wrapper">
      <Picture
        id="fullscreen-picture"
        class="standalone-fullscreen-picture"
        src={entry.data.src}
        alt={entry.data.title}
        title="Exit fullscreen mode"
      />
      <Picture
        id="standalone-picture"
        class="standalone-picture"
        src={entry.data.src}
        alt={entry.data.title}
      />
    </div>
    <div class="details">
      <div class="details-left">
        <div class="details-top-row">
          <div class="title">
            <h1 class="title-name">{entry.data.title}</h1>
          </div>
          <div class="details-nav">
            <Pagination
              class="pagination-image-page"
              entryName="image"
              previousHref={previousPath}
              nextHref={nextPath}
            />
          </div>
        </div>
        <dl>
          <dt class="visually-hidden">Date taken</dt>
          <dd title="Date taken" class="mobile-margin-bottom">
            <time datetime={entry.data.exif.date.toISOString()}>
              {format(entry.data.exif.date, "d MMMM yyyy")}
            </time>
          </dd>
          <div class="mobile-full-break"></div>
          <dt class="visually-hidden">Camera</dt>
          <dd title="Camera">
            {entry.data.exif.cameraModel}
          </dd>
          <dt class="visually-hidden">Lens</dt>
          <dd title="Lens">
            {entry.data.exif.lensModel}
          </dd>
          <div class="mobile-full-break"></div>
          <dt class="visually-hidden">Focal length</dt>
          <dd title="Focal length">
            {entry.data.exif.focalLength?.replace(" ", "")}
          </dd>
          <dt class="visually-hidden">f-number</dt>
          <dd title="f-number">Æ’/{entry.data.exif.fNumber}</dd>
          <dt class="visually-hidden">Exposure time</dt>
          <dd title="Exposure time">{entry.data.exif.exposureTime}s</dd>
          <dt class="visually-hidden">ISO</dt>
          <dd>
            <span aria-hidden="true">ISO</span>{" "}{entry.data.exif.iso}
          </dd>
        </dl>
        <Content />
      </div>
    </div>
  </div>
</Layout>

<script>
  import "./_[...slug]"
</script>
