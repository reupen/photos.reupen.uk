---
import { format } from "date-fns"

import Layout from "../layouts/Layout.astro"
import { Picture } from "../components"
import { getImages, type Photo } from "../utils/getImages"
import { HDRToggle } from "../components"

const images = await getImages()
const groupedImages: Photo[][] = [[]]

images.forEach((image, index) => {
  const currentGroup = groupedImages.at(-1)

  if (!currentGroup) {
    throw new Error("Error grouping images")
  }

  currentGroup.push(image)

  if (images[index + 1]?.isNewMonth) {
    groupedImages.push([])
  }
})
---

<Layout photo={images[0]}>
  <div class="page-header main-header section">
    <div class="container">
      <h1>Reupen’s photos</h1>
      <p>
        A selection of photos I’ve taken over the years.{" "}
        <a href="/about/">More about the site.</a>
      </p>
      <p>
        Most images are now available in HDR in Chrome or Edge with a compatible
        display.
      </p>
    </div>
  </div>
  <div class="page-header section hdr-toggle-header hdr-only">
    <div class="container">
      <HDRToggle />
    </div>
  </div>
  <div class="page-header header-spacing"></div>
  <div class="section">
    <div class="container">
      {
        groupedImages.map((group) => (
          <>
            <h2>{format(group[0].data.exif.date, "MMMM yyyy")}</h2>
            <div class="grid">
              {group.map((image) => (
                <a id={image.id} href={`/image/${image.id}/`}>
                  <Picture
                    class:list={[image.data.hdrSrc && "sdr", "home-picture"]}
                    src={image.data.src}
                    alt={image.data.title}
                    title={image.data.title}
                    sizes="325px"
                    lazy
                  />
                  {image.data.hdrSrc && (
                    <Picture
                      class:list={["hdr", "home-picture"]}
                      src={image.data.hdrSrc}
                      alt={image.data.title}
                      title={image.data.title}
                      sizes="325px"
                      hdr
                      lazy
                    />
                  )}
                </a>
              ))}
            </div>
          </>
        ))
      }
    </div>
  </div>
</Layout>

<style>
  @import "../utils/media-queries.pcss";

  .grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(325px, 1fr));
    gap: 0.2rem;
  }

  h2:first-child {
    margin-top: 0;
  }

  .page-header {
    background: var(--nav-background);
  }

  .main-header {
    padding: 0.75rem 0.75rem 0.5rem;

    p {
      margin: 0;

      + p {
        margin-top: 1rem;
      }
    }

    @media (--large) {
      padding: 0.75rem 1.5rem 0.5rem;
    }
  }

  .hdr-toggle-header {
    position: sticky;
    top: 0;
    padding: 0.5rem 0.75rem 0.5rem;

    @media (--large) {
      padding: 0.5rem 1.5rem 0.5rem;
    }
  }

  .header-spacing {
    padding: 0 0 0.75rem;
  }

  html:not(.hdr-browser) {
    .hdr-only {
      display: none;
    }

    .header-spacing {
      padding-bottom: 1.25rem;
    }
  }

  @media not (--hdr) {
    .hdr-only {
      display: none;
    }

    .header-spacing {
      padding-bottom: 1.25rem;
    }
  }
</style>
