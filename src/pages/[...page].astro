---
import Layout from "../layouts/Layout.astro"
import { format, isSameMonth } from "date-fns"

import Picture from "../components/Picture.astro"
import { getImages } from "../utils/getImages"

export async function getStaticPaths({ paginate }) {
  const images = await getImages()
  return paginate(images, { pageSize: 10 })
}

const { page } = Astro.props
const isFirstPage = page.currentPage === 1
---

<Layout title={!isFirstPage ? `Page ${page.currentPage}` : undefined}>
  <h1>
    Reupen’s photos{!isFirstPage && <> – page {page.currentPage}</>}
  </h1>
  {
    isFirstPage && (
      <p>
        Here’s a selection of photos I’ve taken over the years.{" "}
        <a href="https://astro.build">More about the site.</a>
      </p>
    )
  }
  {
    page.data.map((image, imageIndex) => (
      <div>
        {(image.isNewMonth || imageIndex === 0) && (
          <h2>
            {format(image.data.exif.date, "MMMM yyyy")}
            {imageIndex === 0 && !image.isNewMonth && " (continued)"}
          </h2>
        )}
        <a id={image.slug} href={`/image/${image.slug}`}>
          <Picture
            class="home-picture"
            src={image.data.src}
            alt={image.data.title}
          />
        </a>
      </div>
    ))
  }
  <div class="pagination">
    <div class="previous">
      {
        page.url.prev && (
          <a href={page.url.prev}>
            <span>
              <i class="fa-solid fa-chevron-left" />
              &nbsp;
              <span class="nav-link-text">Previous</span>
            </span>
          </a>
        )
      }
    </div>
    <div class="next">
      {
        page.url.next && (
          <a href={page.url.next}>
            <span>
              <span class="nav-link-text">Next</span>&nbsp;
              <i class="fa-solid fa-chevron-right" />
            </span>
          </a>
        )
      }
    </div>
  </div>
</Layout>

<style>
  .home-picture :global(img) {
    margin-bottom: 1.25rem;
  }

  .pagination {
    display: grid;
    grid-template-columns: 1fr 1fr;
    font-size: 20px;

    & a {
      & span {
        display: flex;
        align-items: center;
      }

      &:hover {
        text-decoration: none;

        .nav-link-text {
          text-decoration: underline;
          text-underline-offset: 4px;
        }
      }
    }
  }

  .next {
    justify-self: right;
  }
</style>
