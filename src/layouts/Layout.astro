---
import "@fontsource-variable/noto-sans"

import "./font-awesome.scss"
import "./Layout.pcss"

export interface Props {
  title?: string
  description?: string
  fullWidth?: boolean
  nextUrl?: string
  previousUrl?: string
  returnUrl?: string
  showTitle?: boolean
}

const siteTitle = "Reupen’s photos"
const siteDescription = "Photos I’ve taken"
const siteAuthor = "Reupen Shah"
const {
  title,
  description,
  fullWidth,
  nextUrl,
  previousUrl,
  returnUrl,
  showTitle,
  ...rest
} = Astro.props

const computedDescription = description || siteDescription
const computedTitle =
  title && title !== siteTitle ? `${title} – ${siteTitle}` : siteTitle
---

<html lang="en" {...rest}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <title>{computedTitle}</title>
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={computedDescription} />
    <meta property="og:title" content={title || siteTitle} />
    <meta property="og:site_name" content={siteTitle} />
    <meta property="og:description" content={computedDescription} />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:creator" content={siteAuthor} />
    <meta name="twitter:title" content={computedTitle} />
    <meta name="twitter:description" content={computedDescription} />
  </head>
  <body data-swipe-threshold="75">
    {
      Astro.url.pathname !== "/" && (
        <header>
          <nav
            class:list={[
              fullWidth && "wide",
              fullWidth ? "container-wide" : "container",
            ]}
          >
            {<a href={returnUrl || "/"}>Reupen’s photos</a>}
            {showTitle && <h1 class="small hide-small-and-short">{title}</h1>}
            {previousUrl && (
              <a href={previousUrl} class="coloured right small hide-small">
                <i class="fa-solid fa-chevron-left" />
                <span class="nav-link-text">
                  Previous<span class="visually-hidden"> image</span>
                </span>
              </a>
            )}
            {nextUrl && (
              <a
                href={nextUrl}
                class:list={[
                  "coloured",
                  "small",
                  "hide-small",
                  !previousUrl && "right",
                ]}
              >
                <span class="nav-link-text">
                  Next<span class="visually-hidden"> image</span>
                </span>
                <i class="fa-solid fa-chevron-right" />
              </a>
            )}
          </nav>
        </header>
      )
    }
    <main>
      <slot />
    </main>
  </body>
</html>

<style>
  @import "../utils/media-queries.pcss";

  header {
    padding: 0.5rem 0.75rem;
    background: #000;
    font-size: 20px;
    font-weight: 500;
    overflow-x: auto;

    @media (--large) {
      padding: 0.75rem 1.5rem;
    }

    a {
      &:not(.coloured) {
        color: var(--nav-text-colour);
      }

      &:not(:hover) {
        text-decoration-line: none;
      }
    }

    nav {
      display: flex;
      align-items: baseline;
      gap: 1rem;
      flex-wrap: wrap;
      text-wrap: nowrap;

      &.wide {
        max-width: calc((var(--large-max-image-height)) * 1.5);

        @media (--short) {
          max-width: unset;
        }
      }

      .right {
        margin-left: auto;
      }

      .small {
        font-size: 16px;
      }

      .hide-small {
        display: none;

        @media (--large) {
          display: initial;
        }

        @media (--short) {
          display: initial;
        }
      }

      .hide-small-and-short {
        display: none;

        @media (--large) {
          display: initial;
        }
      }

      & h1 {
        font-weight: inherit;
        margin: unset;
      }
    }
  }

  .flex {
    display: flex;
    flex-flow: column;
  }
</style>
