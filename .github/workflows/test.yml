name: Test

on:
  pull_request:
  workflow_call:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-site:
    name: Build site
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Git clone repository
        uses: actions/checkout@v3

      - name: Cache Astro cache
        uses: actions/cache@v3
        with:
          path: node_modules/.astro
          key: ${{ runner.os }}-astro-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-astro-

      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Install Node.js dependencies
        run: npm ci

      - name: Build site
        run: |
          npm run build
          tar -czvf /tmp/site.tar.gz dist/

      - name: Upload artefact
        uses: actions/upload-artifact@v3
        with:
          name: site
          path: /tmp/site.tar.gz
          retention-days: 1

  get-playwright-version:
    name: Get Playwright version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Git clone repository
        uses: actions/checkout@v3

      - id: get-version
        name: Get Playwright version
        run: |
          echo "version=$(python scripts/get_playwright_version.py)" >> "$GITHUB_OUTPUT"

  test-e2e:
    name: Run e2e tests
    runs-on: ubuntu-latest
    needs:
      - build-site
      - get-playwright-version
    container:
      image: mcr.microsoft.com/playwright:v${{ needs.get-playwright-version.outputs.version }}-jammy
      options: --user 1001
    steps:
      - name: Git clone repository
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Install Node.js dependencies
        run: npm ci

      - name: Download built docs
        uses: actions/download-artifact@v3
        with:
          name: site
          path: /tmp

      - name: Unpack docs
        run: tar -xzf /tmp/site.tar.gz

      - name: Run e2e tests
        run: npm exec --no -- playwright test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-test-results
          path: test/e2e/output
